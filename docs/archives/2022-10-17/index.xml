<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2022-10-17 on 20yuteo.log</title><link>https://20yuteo.com/hugoapp/archives/2022-10-17/</link><description>Recent content in 2022-10-17 on 20yuteo.log</description><generator>Hugo -- gohugo.io</generator><language>ja</language><managingEditor>20yuteo@gmail.com (20yuteo)</managingEditor><webMaster>20yuteo@gmail.com (20yuteo)</webMaster><lastBuildDate>Mon, 17 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://20yuteo.com/hugoapp/archives/2022-10-17/index.xml" rel="self" type="application/rss+xml"/><item><title>DDDにおける「値オブジェクト」とは</title><link>https://20yuteo.com/hugoapp/about_value_object/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><author>20yuteo@gmail.com (20yuteo)</author><guid>https://20yuteo.com/hugoapp/about_value_object/</guid><description>1. 初めに 「ドメイン駆動設計入門 ボトムアップでわかる！ドメイン駆動設計の基本」から値オブジェクトとは何なのかをまとめる。
2. 「値オブジェクト」とは？ システム開発においてシステム固有の値を定義することが時に必要になる このシステム固有の値を表現するために定義されたオブジェクトが「値オブジェクト」である 3. 「値」とは？ 普段何気なく利用している数字、文字などの値は「一定の性質」を持っている この性質こそが値オブジェクトを理解する鍵となる 「値」の性質は次の三つ 不変である 交換が可能である 等価性によって比較できる 上記の「値」が持つ性質は「値オブジェクト」にそのまま適応される 4. 不変である 「値」が不変であるとの感覚は我々にはピンとこないかもしれない しかし、仮に可変であった場合、下記のようなことが可能になってしまう。 &amp;#34;おはようございます&amp;#34;.changeValue(&amp;#34;こんにちは&amp;#34;); console.log(&amp;#34;おはようございます&amp;#34;); // 2023が出力される つまり、以下のようなクラスは「値オブジェクト」としては不適切である const user = new User({ name: &amp;#34;user name&amp;#34; }); user.changeName(&amp;#34;anothoer user name&amp;#34;); console.log(user.name); 5. 交換が可能である 不変であるが交換が可能とはどうゆうことか？ 我々は普段、何気なく値の交換をしてる。 let user = new User({ name: &amp;#34;first user name&amp;#34; }); user = new User({ name: &amp;#34;another user name&amp;#34; }); 上記が値の交換である。</description></item></channel></rss>